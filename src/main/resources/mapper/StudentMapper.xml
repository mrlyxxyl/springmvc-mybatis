<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yx.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.yx.bean.Student">
        <id column="sid" jdbcType="INTEGER" property="sid"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="tid" jdbcType="INTEGER" property="tid"/>
        <!-- 将article的user属性映射到userResultMap -->
        <association property="teacher" javaType="com.yx.bean.Teacher" resultMap="TeacherBaseResultMap"/>
    </resultMap>

    <resultMap id="TeacherBaseResultMap" type="com.yx.bean.Teacher">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="person_map" type="java.util.HashMap">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
    </resultMap>

    <resultMap id="students" type="java.util.HashMap">
        <id column="sid" jdbcType="INTEGER" property="sid"/>
        <result column="student_name" jdbcType="VARCHAR" property="student_name"/>
        <result column="teacher_name" jdbcType="VARCHAR" property="teacher_name"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    sid, student_name, tid
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yx.bean.StudentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from student
        where sid = #{sid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where sid = #{sid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.yx.bean.StudentExample">
        delete from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yx.bean.Student">
    insert into student (sid, student_name, tid
      )
    values (#{sid,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{tid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.yx.bean.Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                sid,
            </if>
            <if test="studentName != null">
                student_name,
            </if>
            <if test="tid != null">
                tid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sid != null">
                #{sid,jdbcType=INTEGER},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="tid != null">
                #{tid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yx.bean.StudentExample" resultType="java.lang.Integer">
        select count(*) from student
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update student
        <set>
            <if test="record.sid != null">
                sid = #{record.sid,jdbcType=INTEGER},
            </if>
            <if test="record.studentName != null">
                student_name = #{record.studentName,jdbcType=VARCHAR},
            </if>
            <if test="record.tid != null">
                tid = #{record.tid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update student
        set sid = #{record.sid,jdbcType=INTEGER},
        student_name = #{record.studentName,jdbcType=VARCHAR},
        tid = #{record.tid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yx.bean.Student">
        update student
        <set>
            <if test="studentName != null">
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="tid != null">
                tid = #{tid,jdbcType=INTEGER},
            </if>
        </set>
        where sid = #{sid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yx.bean.Student">
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      tid = #{tid,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=INTEGER}
  </update>

    <select id="queryTeacherStudents" resultMap="BaseResultMap">
        SELECT t.id, t.teacher_name, s.sid, s.student_name, s.tid FROM teacher t RIGHT JOIN student s ON s.tid = t.id
    </select>

    <select id="queryStudentByIdAndName" resultMap="BaseResultMap">
        SELECT sid, student_name, tid FROM student WHERE sid = #{0} AND student_name = #{1}
    </select>

    <select id="queryStudentByIdAndNameAnnotation" resultMap="BaseResultMap">
        SELECT sid, student_name, tid FROM student WHERE sid = #{studentId} AND student_name = #{name}
    </select>

    <!--存储过程-->
    <!--  <select id="callPro" statementType="CALLABLE">
      <![CDATA[{call my_pro ()}]]>
      </select>-->

    <select id="callPro" statementType="CALLABLE" resultMap="person_map">
        {call my_pro ()}
    </select>

    <select id="qStudents" statementType="CALLABLE" resultMap="students">
        {call queryStudents ()}
    </select>

    <select id="queryStudents" resultMap="students">
        SELECT s.sid,s.student_name,t.teacher_name FROM student s LEFT JOIN teacher t ON t.id = s.tid
    </select>

    <select id="queryStudentMap" resultType="java.util.HashMap" parameterType="java.lang.Integer">
        SELECT s.sid,s.student_name,t.teacher_name FROM student s LEFT JOIN teacher t ON t.id = s.tid WHERE s.sid = #{tid}
    </select>

    <update id="dynamicSql" parameterType="com.yx.bean.Student">
        update student set
        student_name = #{studentName}, tid = #{tid}
        <where>
            <if test="sid != null">
                sid = #{sid}
            </if>
            <if test="studentName != 'hell'">
               and student_name = #{studentName}
            </if>
        </where>
    </update>
</mapper>